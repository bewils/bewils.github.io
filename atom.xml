<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yuki</title>
  <subtitle>Otaku</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-12T10:22:50.334Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Bewils</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>What&#39;s new in swift4</title>
    <link href="http://yoursite.com/2017/06/09/Swift4/"/>
    <id>http://yoursite.com/2017/06/09/Swift4/</id>
    <published>2017-06-09T06:55:03.000Z</published>
    <updated>2017-06-12T10:22:50.334Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这次 WWDC 最令你激动的更新是什么？&lt;/p&gt;
&lt;p&gt;最令我激动的是 swift 没更新&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然而并不是这样，只不过 keynote 中偏重新品发布没提到就以为没有更新了？Github 上 swift 的更新进程仍在继续，新添加的特性和修复的 bug 也不断增多。Swift 作为一门现代语言正向着更好的方向发展，在这篇文章中将主要讨论 swift4 中主要的变化&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>圆形扇形等一系列问题</title>
    <link href="http://yoursite.com/2017/04/07/CircleAnimation/"/>
    <id>http://yoursite.com/2017/04/07/CircleAnimation/</id>
    <published>2017-04-07T00:30:36.000Z</published>
    <updated>2017-04-07T00:34:59.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;画圆形的方法&quot;&gt;&lt;a href=&quot;#画圆形的方法&quot; class=&quot;headerlink&quot; title=&quot;画圆形的方法&quot;&gt;&lt;/a&gt;画圆形的方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;UIBezierPath(ovalIn: CGRect) 给定一个矩形的范围在其中画一个内接圆&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UIBezierPath(arcCenter: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat, clockwise: Bool)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参数列表为弧形中心，半径，开始角度，结束角度，方向是否为顺时针&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS AutoLayout</title>
    <link href="http://yoursite.com/2017/03/27/AutoLayout/"/>
    <id>http://yoursite.com/2017/03/27/AutoLayout/</id>
    <published>2017-03-26T16:50:49.000Z</published>
    <updated>2017-03-26T18:40:35.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;开始写起了 Playgroundbook，作为重度 storyboard 用户不管做什么项目都喜欢把能可视化的控件都扔到 storyboard 中，通过 storyboard 就能看到整个 App 的样式。结果 Playgroundbook 没法使用 storyboard 简直悲剧，样式看不到也就算了，布局还日常崩。用 frame 布局写得实在难受，还是正经学一下如何用代码来实现 AutoLayout&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Ife 课程笔记 @1</title>
    <link href="http://yoursite.com/2017/03/01/Ife1/"/>
    <id>http://yoursite.com/2017/03/01/Ife1/</id>
    <published>2017-03-01T02:59:53.000Z</published>
    <updated>2017-03-01T10:18:55.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;开始参加百度 2017 年前端技术学院，发现基础还是有点烂，记个笔记作为补充。&lt;/p&gt;
&lt;h2 id=&quot;Emmet&quot;&gt;&lt;a href=&quot;#Emmet&quot; class=&quot;headerlink&quot; title=&quot;Emmet&quot;&gt;&lt;/a&gt;Emmet&lt;/h2&gt;&lt;p&gt;首先是开发效率上面，因为过去常年使用 koa + pug(jade) 快速搭建前后端项目，或者使用 React 这种全面的前端框架，一直没有机会去尝试 emmet 这种神奇的代码生成工具。因为 Ife 的课题都是裸写 HTML，去配置了一下 emmet 发现前端开发速度飞了起来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="FrontEnd" scheme="http://yoursite.com/tags/FrontEnd/"/>
    
  </entry>
  
  <entry>
    <title>macOS 开发入门 NSButton</title>
    <link href="http://yoursite.com/2017/02/12/NSButton/"/>
    <id>http://yoursite.com/2017/02/12/NSButton/</id>
    <published>2017-02-12T11:50:38.000Z</published>
    <updated>2017-03-01T06:39:24.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天来讨论另一个常用的控件&lt;/p&gt;
&lt;p&gt;结束了 NSTextField 的封装后开始封装下一个控件 NSButton&lt;/p&gt;
&lt;p&gt;效果如下&lt;/p&gt;
    
    </summary>
    
    
      <category term="macOS" scheme="http://yoursite.com/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>macOS 开发入门 NSTextField @2</title>
    <link href="http://yoursite.com/2017/02/08/%20NSTextField1/"/>
    <id>http://yoursite.com/2017/02/08/ NSTextField1/</id>
    <published>2017-02-08T06:56:36.000Z</published>
    <updated>2017-03-02T04:34:35.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本来以为一次已经把 NSTextField 的坑踩完了，没想到又陷进去一天…&lt;/p&gt;
&lt;p&gt;上次把基本的绘制样式实现好了，接下来只想实现一个小功能，就是判断下哪个输入框处于有焦点的状态然后高亮下边线就可以了&lt;/p&gt;
    
    </summary>
    
    
      <category term="macOS" scheme="http://yoursite.com/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>macOS 开发入门 NSTextField @1</title>
    <link href="http://yoursite.com/2017/02/05/NSTextField/"/>
    <id>http://yoursite.com/2017/02/05/NSTextField/</id>
    <published>2017-02-05T14:03:33.000Z</published>
    <updated>2017-03-02T05:03:38.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;突发奇想做一个 mac 上的 app，本来以为借着 iOS 的开发经验应该会比较顺利，发现 macOS 整个就一大坑…国内的资料基本没有，还是靠着 google + stackoverflow 才活了下来&lt;/p&gt;
&lt;p&gt;这个系列不是从一个很高的层次很概括地讲解控件，而是记录在开发过程中带着问题去学到的知识和解决的问题，所以条理上可能有点混乱而且偏重实际&lt;/p&gt;
    
    </summary>
    
    
      <category term="macOS" scheme="http://yoursite.com/tags/macOS/"/>
    
  </entry>
  
</feed>
